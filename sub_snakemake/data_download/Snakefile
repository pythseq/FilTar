#!/bin/bash

def get_species(wildcards):
        if wildcards.species_prefix == 'Homo_sapiens.GRCh38':
                return('homo_sapiens')
        if wildcards.species_prefix == 'Mus_musculus.GRCm38':
                return('mus_musculus')

def get_species_synonym(wildcards):
        if wildcards.species_prefix == 'Mus_musculus.GRCm38':
                return ('mus_musculus')
        elif wildcards.species_prefix == 'Homo_sapiens.GRCh38':
                return ('homo_sapiens')

#rule download_mirna_data:
#       input:
#       output:
#          "data/mature.fa"
#       shell:
#          "wget --directory-prefix=data/ ftp://mirbase.org/pub/mirbase/CURRENT/mature.fa.gz && gunzip {output}"

rule get_gtf_file:
     output: "data/{species_prefix}.94.gtf"
     params: get_species
     priority: 10
     shell: "rsync -av rsync://ftp.ensembl.org/ensembl/pub/release-94/gtf/{params}/{wildcards.species_prefix}.94.gtf.gz data/ && gunzip data/{wildcards.species_prefix}.94.gtf.gz && sed 's/^chr//g' data/{wildcards.species_prefix}.94.gtf > tmp && mv tmp data/{wildcards.species_prefix}.94.gtf"

rule download_fasta:
        input:
        output: "data/{species_prefix}.dna.primary_assembly.fa.gz"
        shell: "rsync -av rsync://ftp.ensembl.org/ensembl/pub/release-94/fasta/{params}/dna/{wildcards.species_prefix}.dna.primary_assembly.fa.gz data/"

rule download_fasta_by_chromosome:
        input:
        output: "data/{species_prefix}.dna.chromosome.{chrom}.fa.gz"
        params: get_species_synonym
        shell: "rsync -av rsync://ftp.ensembl.org/ensembl/pub/release-94/fasta/{params}/dna/{wildcards.species_prefix}.dna.chromosome.{wildcards.chrom}.fa.gz data/"

rule decompress_dna_file:
        input: "data/{species_prefix}.dna.primary_assembly.fa.gz"
        output: "data/{species_prefix}.dna.primary_assembly.fa"
        conda: "envs/pigz.yaml"
        threads: 8
        shell: "pigz -p {threads} -d {input}"

rule decompress_chromosomal_dna_file:
        input: "data/{species_prefix}.dna.chromosome.{chrom}.fa.gz"
        output: "data/{species_prefix}.dna.chromosome.{chrom}.fa"
        conda: "envs/pigz.yaml"
        threads: 8
        shell: "pigz -p {threads} -d {input}"

rule download_maf_files_human:
        input:
        output:
           protected("data/maf_hsa/chr{chrom}.maf")
        shell:
           "wget --directory-prefix=data/maf_hsa/ -nv http://hgdownload.soe.ucsc.edu/goldenPath/hg38/multiz100way/maf/chr{wildcards.chrom}.maf.gz && gunzip {output}.gz"

rule download_maf_files_mouse:
        input:
        output:
           protected("data/maf_mmu/chr{chrom}.maf")
        shell:
           "wget --directory-prefix=data/maf_mmu/ -nv http://hgdownload.cse.ucsc.edu/goldenPath/mm10/multiz60way/maf/chr{wildcards.chrom}.maf.gz && gunzip {output}.gz"
